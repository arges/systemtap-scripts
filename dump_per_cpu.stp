#!/usr/bin/stap -g
/*
 * Copyright (C) 2012 Canonical
 * Author: Chris J Arges <chris.j.arges@canonical.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA.
 *
 */

%{
#include <linux/slub_def.h>
void dump_bytes(void *addr, int bytes) {
	int i;
	for (i=0;i<bytes;i++) {
		/* need to check if each byte is a valid addr */
		unsigned long *check_ptr = (unsigned long *)(addr + i);
		if (virt_addr_valid(check_ptr))
			_stp_printf("%016lx ", *check_ptr);
		else
			_stp_printf("xxxxxxxxxxxxxxxx");
	}
	_stp_printf("\n");
}
%}

function dump_per_cpu()
%{
	int cpu;
	void *c;

	/* dump the addresses of the per cpu regions */
	for_each_possible_cpu(cpu) {
		c = (void *)__per_cpu_offset[cpu];
		_stp_printf("CPU#%d @ %lx : ", cpu, __per_cpu_offset[cpu]);
		dump_bytes(c, 4);
	}

%}

probe begin
{
	dump_per_cpu();
	exit();
}

